os:
    - osx
    - linux

# https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
# Default: 9.4
osx_image: xcode11.6  # Xcode 11.6, macOS 10.15.5, JDK 14.02
# osx_image: xcode12u  # Xcode 12.0, macOS 10.15.5, JDK 14.0.1

# Linux Ubuntu Precise
sudo: required
dist: trusty
group: travis_latest

language: node_js
node_js:
    - '10'

cache:
    directories:
        - $HOME/.electron

addons:
    apt:
        packages:
            - icnsutils
            - graphicsmagick
            - gcc-multilib
            - g++-multilib
            - libgconf-2-4
            - binutils
            - rpm

before_install:
    - git --version
    - git config --global user.name "Travis CI"
    - git config --global user.email "travis@travis-ci.org"
    - npm install -g npm@latest
    - npm --version

install:
    - travis_wait 40 npm install

script:
    - npm run build

after_success:
    - npm run coveralls
    - mkdir -p releases
    - PRODUCT_NAME='Snapmaker Luban'
    - PACKAGE_NAME=`node -e "console.log(require('./src/package.json').name)"`
    - PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
    - RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
    - COMMIT_LOG=`git log -1 --format='%ci %H %s'`
    - |
        # build:mac-x64
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            # https://github.com/electron-userland/electron-osx-sign/issues/83
            # Temporarily Bypass Gatekeeper
            sudo spctl --master-disable;
            sudo spctl --status;
            travis_wait 60 npm run build:mac-x64;
            ls -al output output/*;
            cp -af "output/latest-mac.yml" "releases/latest-mac.yml";
            cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}.dmg" "releases/${RELEASE}-mac-x64.dmg";
            cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}-mac.zip" "releases/${RELEASE}-mac.zip";
            ls -al releases/*;
        fi
    - |
        # build:linux-x64
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            npm run build:linux-x64;
            ls -al output output/*;
            cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_amd64.deb" "releases/${RELEASE}-linux-amd64.deb";
            cp -af "output/${PACKAGE_NAME}-${PACKAGE_VERSION}.x86_64.rpm" "releases/${RELEASE}-linux.x86_64.rpm";
            pushd releases;
            ln -sf ../output/linux-unpacked "${RELEASE}-linux-x64";
            tar zcfh "${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64";
            rm -f "${RELEASE}-linux-x64";
            popd;
            ls -al releases/*;
        fi
    - |
        # build:linux-ia32
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            npm run build:linux-ia32;
            ls -al output output/*;
            cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_i386.deb" "releases/${RELEASE}-linux-i386.deb";
            cp -af "output/${PACKAGE_NAME}-${PACKAGE_VERSION}.i686.rpm" "releases/${RELEASE}-linux.i686.rpm";
            pushd releases;
            ln -sf ../output/linux-ia32-unpacked "${RELEASE}-linux-ia32";
            tar zcfh "${RELEASE}-linux-ia32.tar.gz" "${RELEASE}-linux-ia32";
            rm -f "${RELEASE}-linux-ia32";
            popd;
            ls -al releases/*;
        fi

before_deploy:
    - echo "Deploying to GitHub releases"

deploy:
    provider: releases
    api_key:
        secure: "QtewfRD/MvdNFkslx4GWC9cWUGcENWW29sOnfeggK+x41QZs7Z42142/Ca0k48B9vqKRaw3ORwuRb0CtItqH/LIZo4UhQ/m7qfkNRyVrU95a1fMImJ4G+FYmBdXj095SxFFIxaNAUeyeDB/xr1aCkXu4niG6ESes9nx4s2SBSj/XQs2zD1dVNMWwFWooXVflumyKSPpLd6KoD939rwAHPmv6qZHOawrI75zHuMuzxHR8PZw8XS4BSasq/J6pkLFmCedOrIvhGIO49j80YwaeaJQGCNionpNQNV0Tk7FQ73irz6apxr1n3WecenZZxYY6i0ohoSWNtRQ13GUrv4KJ74o+4kWWHq00tBEjpusYhBOOz/rn1MqtRi7+F5MnGwnMZC8BqjTE4fZujtknCeaJL+P+4c+Mj3qTTaE58Xc3SMIxJTo4sxQJnMvil5tGDZ+z7ToS3O+P8hjwdATlQDWQJq/FjRIMYHG8ZSJKzEl8If8qOXNptm2RS9T+nkI11z1ODww4t30VkHZwVsEUjPabklhFxVOar8bRx8zTeCxBz80tR1OjX2mbUzCX+i4oOpiGv0u3SSXivxlq3okPW9CmLjnQc0k3XV7uo3rceg5y1AXms5/SdCQowbG1mj/0pgCBvQX1fmvMY5ugxGgEOalDOOKS5BzP2C1Dj4bNA8pbEW4="
    file_glob: true
    file:
        - 'releases/*.*'
    overwrite: true
    skip_cleanup: true
    on:
        # https://docs.travis-ci.com/user/deployment#Conditional-Releases-with-on
        tags: true  # Deploy app only when a tag is applied to the commit
        node: '10'
        repo: Snapmaker/Luban
