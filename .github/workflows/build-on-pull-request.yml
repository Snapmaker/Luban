name: Build on PR

on:
    workflow_dispatch:
    pull_request:
        branches:
            - main
            - release/*
jobs:
    build-windows:
        name: Build Windows Packages
        runs-on: windows-2022
        steps:
            -   name: Prepare VC++ Runtime
                run: choco install -y vcredist2017

            -   name: Checkout Code
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.SACP_TOKEN }}
                    submodules: 'true'

            -   name: Checkout submodules
                run: git submodule update --init --recursive

            -   name: Use Node.js 16
                uses: actions/setup-node@v3
                with:
                    node-version: 16

            -   name: Init Props
                run: |
                    $PRODUCT_NAME="Snapmaker Luban"
                    $PACKAGE_NAME="Snapmaker-luban"
                    $PACKAGE_VERSION= node -e "console.log(require('./src/package.json').version)"
                    $RELEASE="$PACKAGE_NAME-$PACKAGE_VERSION"
                    echo "SM_RELEASE=$RELEASE" >> $env:GITHUB_ENV
                    
            # -   name: install
            #     run: |
            #         npm install -g npm@^9
            #         npm install
            # -   name: build
            #     run: npm run build

            # ----------------------------------------------------------------
            # Build Windows x64
            # ----------------------------------------------------------------
            -   name: Build Windows x64 Binaries
                run: |
                    npm run build:win-x64

            -   name: Upload artifacts Windows x64
                uses: actions/upload-artifact@v4
                with:
                    name: Snapmaker-Luban-4.13.1-beta.1-win-x64.exe
                    path: ./output/${{ SM_RELEASE }}.exe

            # -   name: Deploy Windows release
            #     uses: WebFreak001/deploy-nightly@v3.1.0
            #     with:
            #         upload_url: https://uploads.github.com/repos/leo-songye-li/Luban/releases/183507405/assets{?name,label}
            #         release_id: 183507405
            #         asset_path: ./output/$SM_RELEASE.exe
            #         asset_name: $SM_RELEASE.exe
            #         asset_content_type: application/octet-stream
            #         max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted

    #            -   name: Release on Github
    #                uses: softprops/action-gh-release@v1
    #                with:
    #                    files: |
    #                        ./output/*.exe
    #                        ./output/latest.yml

#    build-macos:
#        name: Build macOS Packages
#
#        # macos-11.7
#        runs-on: macos-latest
#
#        steps:
#            -   name: Checkout Code
#                uses: actions/checkout@v4
#                with:
#                    token: ${{ secrets.SACP_TOKEN }}
#                    submodules: 'true'
#
#            -   name: Checkout submodules
#                run: git submodule update --init --recursive
#
#            -   name: Set up Python
#                uses: actions/setup-python@v2
#                with:
#                    python-version: 3.11
#
#            -   name: Install dependencies
#                run: |
#                    python -m pip install --upgrade pip
#
#            -   name: Use Node.js 16
#                uses: actions/setup-node@v3
#                with:
#                    node-version: 16
#
#            # install setuptools to reintroduce distutils missing in Python 3.12
#            # https://github.com/nodejs/node-gyp/issues/2869
#            -   run: pip install setuptools
#            -   run: npm install -g npm@^9
#            -   run: npm install
#
#            -   run: npm run build
#
#            # ----------------------------------------------------------------
#            # Build macOS x64 & arm64
#            # ----------------------------------------------------------------
#            -   name: Build macOS Binaries
#                run: npm run build:mac
#                env:
#                    CSC_LINK: ${{ secrets.CSC_LINK_MACOS }}
#                    CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD_MACOS }}
#                    APPLEID: ${{ secrets.APPLEID }}
#                    APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
#
#    #            -   name: Release on Github
#    #                uses: softprops/action-gh-release@v1
#    #                with:
#    #                    files: |
#    #                        ./output/*.zip
#    #                        ./output/*.dmg
#    #                        ./output/latest-mac.yml
#
#
#    build-linux:
#        name: Build Linux Packages
#
#        # Ubuntu 20.04: ubuntu-latest or ubuntu-20.04
#        runs-on: ubuntu-latest
#
#        steps:
#            -   name: Checkout Code
#                uses: actions/checkout@v4
#                with:
#                    token: ${{ secrets.SACP_TOKEN }}
#                    submodules: 'true'
#
#            -   name: Checkout submodules
#                run: git submodule update --init --recursive
#
#            -   name: Use Node.js 16
#                uses: actions/setup-node@v3
#                with:
#                    node-version: 16
#
#            -   run: npm install -g npm@^9
#            -   run: npm install
#
#            -   run: npm run build
#
#            # ----------------------------------------------------------------
#            # Build Linux x64
#            # ----------------------------------------------------------------
#            -   name: Build Linux x64 Binaries
#                run: npm run build:linux-x64
#
#            -   run: |
#                    PRODUCT_NAME="Snapmaker Luban"
#                    PACKAGE_NAME="snapmaker-luban"
#                    PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
#                    RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
#
#                    ln -sf ./output/linux-unpacked "${RELEASE}-linux-x64"
#                    tar zcfh "./output/${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64"
#                    rm -f "${RELEASE}-linux-x64"
#
#            -   name: Release on Github
#                uses: softprops/action-gh-release@v1
#                with:
#                    files: |
#                        ./output/*.deb
#                        ./output/*.rpm
#                        ./output/*.tar.gz
