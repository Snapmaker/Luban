name: Build macOS

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build macOS package

    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 10.x
        uses: actions/setup-node@v2
        with:
          node-version: '10.x'

      - run: npm install

      - run: npm run build

      - name: Build Binaries
        run: npm run build:mac-x64
        env:
          CSC_LINK: ${{ secrets.CSC_LINK_MACOS }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD_MACOS }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}

      # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Setting Environment Variables
        run: |
          PRODUCT_NAME="Snapmaker Luban"
          PACKAGE_NAME="snapmaker-luban"
          PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
          RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}

          MACOS_DMG_ASSET_PATH="./output/${PRODUCT_NAME}-${PACKAGE_VERSION}.dmg"
          MACOS_DMG_ASSET_NAME="${RELEASE}-mac-x64.dmg"

          echo "MACOS_DMG_ASSET_PATH=$MACOS_DMG_ASSET_PATH" >> $GITHUB_ENV
          echo "MACOS_DMG_ASSET_NAME=$MACOS_DMG_ASSET_NAME" >> $GITHUB_ENV

      # Upload release asset
      # See https://github.com/actions/upload-release-asset
      - name: Upload Release Asset - Meta YAML
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./output/latest-mac.yml
          asset_name: latest-mac.yml
          asset_content_type: text/plain

      # second asset
      - name: Upload Release Asset - DMG
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.MACOS_DMG_ASSET_PATH }}
          asset_name: ${{ env.MACOS_DMG_ASSET_NAME }}
          asset_content_type: application/octet-stream
